*****NEW RESULT*************************
best classifier: weka.classifiers.trees.RandomForest
arguments: [-I, 10, -K, 0, -depth, 0]
attribute search: null
attribute search arguments: []
attribute evaluation: null
attribute evaluation arguments: []
metric: errorRate
estimated errorRate: 0.045454545454545456
training time on evaluation dataset: 0.036 seconds

You can use the chosen classifier in your own code as follows:

Classifier classifier = AbstractClassifier.forName("weka.classifiers.trees.RandomForest", new String[]{"-I", "10", "-K", "0", "-depth", "0"});
classifier.buildClassifier(instances);


Correctly Classified Instances          21               95.4545 %
Incorrectly Classified Instances         1                4.5455 %
Kappa statistic                          0.6452
Mean absolute error                      0.0591
Root mean squared error                  0.1581
Relative absolute error                 30.5882 %
Root relative squared error             54.6173 %
Total Number of Instances               22     

=== Confusion Matrix ===

  a  b   <-- classified as
 20  0 |  a = FALSE
  1  1 |  b = TRUE

=== Detailed Accuracy By Class ===

                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class
                 1.000    0.500    0.952      1.000    0.976      0.690    1.000     1.000     FALSE
                 0.500    0.000    1.000      0.500    0.667      0.690    1.000     1.000     TRUE
Weighted Avg.    0.955    0.455    0.957      0.955    0.948      0.690    1.000     1.000     

Temporary run directories:
/tmp/autoweka2813502742502137239/


For better performance, try giving Auto-WEKA more time.

*********************************************
*****NEW RESULT*************************
best classifier: weka.classifiers.trees.RandomForest
arguments: [-I, 8, -K, 0, -depth, 0]
attribute search: weka.attributeSelection.BestFirst
attribute search arguments: [-D, 0, -N, 4]
attribute evaluation: weka.attributeSelection.CfsSubsetEval
attribute evaluation arguments: []
metric: errorRate
estimated errorRate: 0.1111111111111111
training time on evaluation dataset: 0.022 seconds

You can use the chosen classifier in your own code as follows:

AttributeSelection as = new AttributeSelection();
ASSearch asSearch = ASSearch.forName("weka.attributeSelection.BestFirst", new String[]{"-D", "0", "-N", "4"});
as.setSearch(asSearch);
ASEvaluation asEval = ASEvaluation.forName("weka.attributeSelection.CfsSubsetEval", new String[]{});
as.setEvaluator(asEval);
as.SelectAttributes(instances);
instances = as.reduceDimensionality(instances);
Classifier classifier = AbstractClassifier.forName("weka.classifiers.trees.RandomForest", new String[]{"-I", "8", "-K", "0", "-depth", "0"});
classifier.buildClassifier(instances);


Correctly Classified Instances          40               88.8889 %
Incorrectly Classified Instances         5               11.1111 %
Kappa statistic                          0.3902
Mean absolute error                      0.1642
Root mean squared error                  0.296 
Relative absolute error                 67.7073 %
Root relative squared error             86.9868 %
Total Number of Instances               45     

=== Confusion Matrix ===

  a  b   <-- classified as
 38  1 |  a = FALSE
  4  2 |  b = TRUE

=== Detailed Accuracy By Class ===

                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class
                 0.974    0.667    0.905      0.974    0.938      0.419    0.818     0.949     FALSE
                 0.333    0.026    0.667      0.333    0.444      0.419    0.818     0.445     TRUE
Weighted Avg.    0.889    0.581    0.873      0.889    0.872      0.419    0.818     0.882     

Temporary run directories:
/tmp/autoweka6885801059024917742/


For better performance, try giving Auto-WEKA more time.
Tried 642 configurations; to get good results reliably you may need to allow for trying thousands of configurations.

*********************************************
*****NEW RESULT*************************
best classifier: weka.classifiers.trees.RandomForest
arguments: [-I, 113, -K, 0, -depth, 17]
attribute search: weka.attributeSelection.GreedyStepwise
attribute search arguments: [-C, -N, 210]
attribute evaluation: weka.attributeSelection.CfsSubsetEval
attribute evaluation arguments: [-M]
metric: errorRate
estimated errorRate: 0.16666666666666666
training time on evaluation dataset: 0.135 seconds

You can use the chosen classifier in your own code as follows:

AttributeSelection as = new AttributeSelection();
ASSearch asSearch = ASSearch.forName("weka.attributeSelection.GreedyStepwise", new String[]{"-C", "-N", "210"});
as.setSearch(asSearch);
ASEvaluation asEval = ASEvaluation.forName("weka.attributeSelection.CfsSubsetEval", new String[]{"-M"});
as.setEvaluator(asEval);
as.SelectAttributes(instances);
instances = as.reduceDimensionality(instances);
Classifier classifier = AbstractClassifier.forName("weka.classifiers.trees.RandomForest", new String[]{"-I", "113", "-K", "0", "-depth", "17"});
classifier.buildClassifier(instances);


Correctly Classified Instances          65               83.3333 %
Incorrectly Classified Instances        13               16.6667 %
Kappa statistic                          0.6667
Mean absolute error                      0.2259
Root mean squared error                  0.3318
Relative absolute error                 45.1734 %
Root relative squared error             66.3533 %
Total Number of Instances               78     

=== Confusion Matrix ===

  a  b   <-- classified as
 26 13 |  a = FALSE
  0 39 |  b = TRUE

=== Detailed Accuracy By Class ===

                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class
                 0.667    0.000    1.000      0.667    0.800      0.707    0.907     0.904     FALSE
                 1.000    0.333    0.750      1.000    0.857      0.707    0.907     0.872     TRUE
Weighted Avg.    0.833    0.167    0.875      0.833    0.829      0.707    0.907     0.888     

Temporary run directories:
/tmp/autoweka3900346103333215898/


For better performance, try giving Auto-WEKA more time.
Tried 573 configurations; to get good results reliably you may need to allow for trying thousands of configurations.

*********************************************
*****NEW RESULT*************************
best classifier: weka.classifiers.trees.RandomForest
arguments: [-I, 29, -K, 0, -depth, 6]
attribute search: weka.attributeSelection.GreedyStepwise
attribute search arguments: [-C, -B, -R]
attribute evaluation: weka.attributeSelection.CfsSubsetEval
attribute evaluation arguments: []
metric: errorRate
estimated errorRate: 0.10256410256410256
training time on evaluation dataset: 0.014 seconds

You can use the chosen classifier in your own code as follows:

AttributeSelection as = new AttributeSelection();
ASSearch asSearch = ASSearch.forName("weka.attributeSelection.GreedyStepwise", new String[]{"-C", "-B", "-R"});
as.setSearch(asSearch);
ASEvaluation asEval = ASEvaluation.forName("weka.attributeSelection.CfsSubsetEval", new String[]{});
as.setEvaluator(asEval);
as.SelectAttributes(instances);
instances = as.reduceDimensionality(instances);
Classifier classifier = AbstractClassifier.forName("weka.classifiers.trees.RandomForest", new String[]{"-I", "29", "-K", "0", "-depth", "6"});
classifier.buildClassifier(instances);


Correctly Classified Instances          70               89.7436 %
Incorrectly Classified Instances         8               10.2564 %
Kappa statistic                          0.7949
Mean absolute error                      0.1858
Root mean squared error                  0.2719
Relative absolute error                 37.1574 %
Root relative squared error             54.3701 %
Total Number of Instances               78     

=== Confusion Matrix ===

  a  b   <-- classified as
 32  7 |  a = FALSE
  1 38 |  b = TRUE

=== Detailed Accuracy By Class ===

                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class
                 0.821    0.026    0.970      0.821    0.889      0.804    0.970     0.964     FALSE
                 0.974    0.179    0.844      0.974    0.905      0.804    0.970     0.960     TRUE
Weighted Avg.    0.897    0.103    0.907      0.897    0.897      0.804    0.970     0.962     

Temporary run directories:
/tmp/autoweka7304119559539545496/


For better performance, try giving Auto-WEKA more time.
Tried 627 configurations; to get good results reliably you may need to allow for trying thousands of configurations.

*********************************************
*****NEW RESULT*************************
best classifier: weka.classifiers.meta.AdaBoostM1
arguments: [-P, 100, -I, 19, -Q, -S, 1, -W, weka.classifiers.rules.PART, --, -N, 4, -M, 1, -R]
attribute search: weka.attributeSelection.GreedyStepwise
attribute search arguments: [-N, 127]
attribute evaluation: weka.attributeSelection.CfsSubsetEval
attribute evaluation arguments: [-M]
metric: errorRate
estimated errorRate: 0.25
training time on evaluation dataset: 0.023 seconds

You can use the chosen classifier in your own code as follows:

AttributeSelection as = new AttributeSelection();
ASSearch asSearch = ASSearch.forName("weka.attributeSelection.GreedyStepwise", new String[]{"-N", "127"});
as.setSearch(asSearch);
ASEvaluation asEval = ASEvaluation.forName("weka.attributeSelection.CfsSubsetEval", new String[]{"-M"});
as.setEvaluator(asEval);
as.SelectAttributes(instances);
instances = as.reduceDimensionality(instances);
Classifier classifier = AbstractClassifier.forName("weka.classifiers.meta.AdaBoostM1", new String[]{"-P", "100", "-I", "19", "-Q", "-S", "1", "-W", "weka.classifiers.rules.PART", "--", "-N", "4", "-M", "1", "-R"});
classifier.buildClassifier(instances);


Correctly Classified Instances           9               75      %
Incorrectly Classified Instances         3               25      %
Kappa statistic                          0.5   
Mean absolute error                      0.363 
Root mean squared error                  0.4057
Relative absolute error                 72.5971 %
Root relative squared error             81.1369 %
Total Number of Instances               12     

=== Confusion Matrix ===

 a b   <-- classified as
 3 3 | a = FALSE
 0 6 | b = TRUE

=== Detailed Accuracy By Class ===

                 TP Rate  FP Rate  Precision  Recall   F-Measure  MCC      ROC Area  PRC Area  Class
                 0.500    0.000    1.000      0.500    0.667      0.577    0.792     0.773     FALSE
                 1.000    0.500    0.667      1.000    0.800      0.577    0.792     0.722     TRUE
Weighted Avg.    0.750    0.250    0.833      0.750    0.733      0.577    0.792     0.747     

Temporary run directories:
/tmp/autoweka1552863335856158690/


For better performance, try giving Auto-WEKA more time.
Tried 783 configurations; to get good results reliably you may need to allow for trying thousands of configurations.

*********************************************
